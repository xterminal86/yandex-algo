#!/usr/bin/python3

#
# Формат ввода
# В первой строке записано одно число — количество команд, оно не превосходит
# 100000. Далее идут команды по одной в строке. Команды могут быть следующих
# видов:
#
# push(x) — добавить число x в стек. Число x не превышает 10^5;
# pop() — удалить число с вершины стека;
# get_max() — напечатать максимальное число в стеке;
# top() — напечатать число с вершины стека;
#
# Если стек пуст, при вызове команды get_max нужно напечатать «None»,
# для команды pop и top — «error».
#
# Формат вывода
# Для каждой команды get_max() напечатайте результат её выполнения. Если стек
# пустой, для команды get_max() напечатайте «None». Если происходит удаление из
# пустого стека — напечатайте «error».
#
class StackMax:
  _stack    = [];
  _maximums = [];
  
  # -----------------------------------------------------------------------------
  
  def Push(self, x):
    if (len(self._maximums) == 0) or (self._maximums[-1] <= x):
      self._maximums.append(x);
    
    self._stack.append(x);

  # -----------------------------------------------------------------------------

  def Pop(self):
    if len(self._stack) == 0:
      print("error");
      return;
    
    n = self._stack.pop();

    if (n == self._maximums[-1]):
      self._maximums.pop();

  # -----------------------------------------------------------------------------

  def GetMax(self):
    if len(self._stack) == 0:
      print("None");
      return;
    
    print(self._maximums[-1]);
  
  # -----------------------------------------------------------------------------
  
  def Print(self):
    out = ">>\n";
    ln = len(self._stack) - 1;
    while ln >= 0:
      out += f"  { self._stack[ln] }\n";
      ln += -1;
    out += "<<";
    print(out);

#################################################################################

def main():
  s = StackMax();
  
  commands = int(input().rstrip());

  for i in range(commands):
    cmd = input().rstrip().split();

    if cmd[0] == "push":
      val = int(cmd[1]);
      s.Push(val);
    elif cmd[0] == "pop":
      s.Pop();
    elif cmd[0] == "get_max":
      s.GetMax();

#################################################################################

if __name__ == "__main__":
  main();
