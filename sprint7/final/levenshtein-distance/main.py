#!/usr/bin/python3

# contest id = 87486242

#
# Поскольку в теории про это ничего нет, то идём в интернет
# и берём информацию оттуда.
#
# Для закрепления материала смотрим ролики с индусами на ютубе.
#
# Временная сложность O(n*m), где n, m - длины соответствующих строк.
# Пространственная  - O( 2*max(n, m) ) для хранения двух строк,
#                                      т.к. всё матрица нам не нужна.
#

################################################################################

def main():
  s1 = input().rstrip();
  s2 = input().rstrip();

  ln1 = len(s1);
  ln2 = len(s2);

  ln = max(ln1, ln2);

  dps1 = [ 0 ] * (ln + 1);

  dps2 = [ 0 ] * (ln + 1);
  dps2[0] = 1;

  for i in range(ln + 1):
    dps1[i] = i;

  for i in range(1, ln1 + 1):
    dps2[0] = i;
    for j in range(1, ln2 + 1):
      if s1[i - 1] == s2[j - 1]:
        sc = 0;
      else:
        sc = 1;

      delete  = dps1[j] + 1;
      insert  = dps2[j - 1] + 1;
      replace = dps1[j - 1] + sc;

      dps2[j] = min(delete, insert, replace);

    dps1 = dps2[:];

  print(dps1[ln2]);

################################################################################

if __name__ == "__main__":
  main();
