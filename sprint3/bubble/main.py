#!/usr/bin/python3

#
# Формат ввода
# В первой строке на вход подаётся натуральное число n — длина массива,
# 2 ≤ n ≤ 1000.
# Во второй строке через пробел записано n целых чисел.
# Каждое из чисел по модулю не превосходит 1000.
#
# Обратите внимание, что считывать нужно только 2 строки: значение n и входной
# массив.
#
# Формат вывода
# После каждого прохода по массиву, на котором какие-то элементы меняются
# местами, выводите его промежуточное состояние.
# Таким образом, если сортировка завершена за k меняющих массив итераций, то
# надо вывести k строк по n чисел в каждой — элементы массива после каждой из
# итераций.
# Если массив был изначально отсортирован, то просто выведите его.
#

import sys;

################################################################################

def BubbleSort(arr):
  ln = len(arr);

  wereChanges   = False;
  alreadySorted = True;

  for i in range(ln - 1, -1, -1):
    wereChanges = False;
    for j in range(i):
      if arr[j] > arr[j + 1]:
        arr[j], arr[j + 1] = arr[j + 1], arr[j];
        wereChanges = True;
        alreadySorted = False;

    if (wereChanges == True):
      print(*arr);

  if (wereChanges == False) and (alreadySorted == True):
    print(*arr);

################################################################################

def main():
  n = int(input().rstrip());
  arr = list( map(int, sys.stdin.readline().rstrip().split()) );

  BubbleSort(arr);

################################################################################

if __name__ == "__main__":
  main();
